ЛК 2
Содержание
I. 4- и 8-связность.
II. Алгоритм Брезенхема
III. Обобщение алгоритма Брезенхема
IV. Интерполяция цвета при выводе отрезка
V. Алгоритм заливки выпуклого многоугольника с интерполяцией цвета
VI. Алгоритм заливки невыпуклого многоугольника

I. 4- и 8-связность
См. конспект.

II. Алгоритм Брезенхема

Параметры:
  dx = x1 – x0; dy = y1 – y0; k = dy / dx
Ограничения:
  первый квадрант; 
  x1 > x0; - y1 > y0; 0 ≤ k ≤ 1. 

Вариант 1 (тривиальный). 
  x = x0 
  пока x ≤ x1: 
    y = [kx + b] # Целая часть числа 
    Залить(x, y) 
    x = x + 1 

Вариант 2 (без умножения на k, контроль ci).
  x = x0 
  y = y0 
  ci = 0 
  пока x ≤ x1:
    Залить(x, y) 
    x = x + 1 
    ci = ci + k 
    если ci > 0.5: 
      y = y + 1
      ci = ci - 1 # см. пояснения ниже
Пояснения:
  (1) yi = kxi + b – ci (см. рис. 2) 
  (2) yi+1 = kxi+1 + b – ci+1  # xi+1 = xi + 1
  xi+1 – xi = 1 
  yi+1 – yi = 1 (ci > 0.5) 
  (2) – (1): 1 = k – ci+1 + ci 
  ci+1 = ci + k – 1 (см. выше перед "если" ci = ci + k) 

Вариант 3 (замена ci > 0.5 на d > 0).
  k = dy / dx # Из d > 0 следует, что d = 2ci – 1
  x = x0 
  y = y0 
  d = –1 
  пока x ≤ x1:
    Залить(x, y)
    x = x + 1 
    d = d + 2k # см. пояснения ниже
    если d > 0:
      y = y + 1
      d = d – 2 # см. пояснения ниже
Пояснения:
  а)
    ci = ci + k 
    2ci = 2ci + 2k 
    2ci – 1 = 2ci – 1 + 2k, то есть d = d + 2k
  б)
    ci = ci - 1
    2ci = 2ci - 2
    2ci - 1 = 2ci - 1 - 2, то есть d = d - 2

Вариант 4 (целочисленный) - алгоритм Брезенхема.
  k = dy # Прежний k = dy / dx умножаем на dx 
  Тогда вместо: 
  d = –1 имеем d = –dx 
  d = d – 2 имеем d = d – 2dx 
  d = d + 2k имеем d = d + 2dy
  Алгоритм:
  x = x0 # k = dy не нужен
  y = y0 
  d = –dx
  dx2 = dx + dx
  dy2 = dy + dy
  пока x ≤ x1: 
    Залить(x, y) 
    x = x + 1 
    d = d + dy2
    если d > 0:
      y = y + 1
      d = d – dx2

III.  Обобщение алгоритма Брезенхема
Входные данные: 
  x0, y0 – координаты начала отрезка; 
  x1, y1 – координаты конца отрезка; 
  vp – массив значений пикселей окна вывода формы (w, h),
  где w, h - соответственно ширина и высота окна.
  vp = 255.
Выходные данные: 
  vp – заполненный массив значений пикселей.
Алгоритм:
  1. Начало. 
  2. vp = 255 # Белый цвет 
  3. steep = abs(y1 - y0) > abs(x1 - x0) # Крутизна 
  4. Если steep: # Обмен X, Y, если угол наклона отрезка более 45º 
       x0, y0 = y0, x0 # Обмен
       x1, y1 = y1, x1 # Обмен
  5. Если x0 > x1: # Приводим к базовой форме алгоритма, в которой x0 < x1 
       x0, x1 = x1, x0 # Обмен
       y0, y1 = y1, y0 # Обмен
  6. dx = x1 – x0; dy = abs(y1 – y0) 
  7. dx2 = dx + dx; dy2 = dy + dy
  8. d = –dx 
  9. y_step = 1 Если y0 < y1 Иначе –1 # Шаг по Y 
 10. y = y0; x = x0 
 11. Пока x ≤ x1: 
       Если steep: # Нужен обмен
         xp, yp = y, x # Обмен
       Иначе: 
         xp, yp = x, y 
       vp[yp, xp] = 0 # Черный цвет 
       d = d + dy2 
       Если d > 0: 
         y = y + y_step # 1 или -1
         d = d – dx2 
       x = x + 1 
 12. Вывод vp.
 13. Останов.

IV. Интерполяция цвета при выводе отрезка
Вариант 1 (см. конспект).
RGB. Берем R.
R1, R2 - известны. R3 - ?
R3 = (1 - t) * R1 + t * R2,
где t = d13 / d12
Вариант 2. Цвет - массив.
dx = x1 - x0
d_clr = (clr1 - clr0) / dx
x = x0
clr = clr0
В цикле:
  x += dx
  clr += d_clr

V. Алгоритм заливки выпуклого многоугольника с интерполяцией цвета
См. конспект.

VI. Алгоритм заливки невыпуклого многоугольника
См. конспект.
